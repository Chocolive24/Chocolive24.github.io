---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug"

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection("project")).sort((a, b) => {
    // Sort by type first
    const typeOrder = {
      'featured': 1,
      'academic': 2,
      'personal': 3,
      'gamejam': 4
    };

    const typeA = a.data.type;
    const typeB = b.data.type;

    // Compare types using predefined order
    if (typeOrder[typeA] < typeOrder[typeB]) {
      return -1;
    } else if (typeOrder[typeA] > typeOrder[typeB]) {
      return 1;
    }

    // If types are the same, sort by 'top'
    if (a.data.top && b.data.top) {
      return parseInt(a.data.top) - parseInt(b.data.top);
    } else if (a.data.top) {
      return -1;
    } else if (b.data.top) {
      return 1;
    } else {
      return 0; // If neither have 'top', consider them equal
    }
  });

  // const posts = await getCollection("project");
  // posts.sort((a, b) => {
  //   // First sort by if state == "active" and then by date
  //   if (a.data.state === "active" && b.data.state !== "active") {
  //     return -1;
  //   } else if (a.data.state !== "active" && b.data.state === "active") {
  //     return 1;
  //   }

  //   return b.data.startDate.valueOf() - a.data.startDate.valueOf();
  // });
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
---

<BaseLayout title="Projects" sideBarActiveItemID="projects">
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Projects</div>
  </div>

  {
    page.data.length === 0 ? (
      <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
        <p class="font-bold">Sorry!</p>
        <p>There are no projects to show at the moment. Check back later!</p>
      </div>
    ) : (
      <>
      {/* Render Featured Projects */}
      <div class="mb-5">
        <div class="text-xl font-bold mb-2">Featured Projects</div>
        <ul>
          {page.data
            .filter(post => post.data.type === 'featured')
            .map(post => (
                <HorizontalCard
                  title={post.data.title}
                  img={post.data.heroImage}
                  desc={post.data.description}
                  url={`/project/${createSlug(post.data.title, post.slug)}`}
                  target="_self"
                  badge={post.data.state}
                  tags={post.data.tags}
                />
                <div class="divider my-0" />
            ))}
        </ul>
      </div>

      {/* Render Academic Projects */}
      <div class="mb-5">
        <div class="text-xl font-bold mb-2">Academic Projects</div>
        <ul>
          {page.data
            .filter(post => post.data.type === 'academic')
            .map(post => (
                <HorizontalCard
                  title={post.data.title}
                  img={post.data.heroImage}
                  desc={post.data.description}
                  url={`/project/${createSlug(post.data.title, post.slug)}`}
                  target="_self"
                  badge={post.data.state}
                  tags={post.data.tags}
                />
                <div class="divider my-0" />
            ))}
        </ul>
      </div>

      {/* Render Personal Projects */}
      <div class="mb-5">
        <div class="text-xl font-bold mb-2">Personal Projects</div>
        <ul>
          {page.data
            .filter(post => post.data.type === 'personal')
            .map(post => (
                <HorizontalCard
                  title={post.data.title}
                  img={post.data.heroImage}
                  desc={post.data.description}
                  url={`/project/${createSlug(post.data.title, post.slug)}`}
                  target="_self"
                  badge={post.data.state}
                  tags={post.data.tags}
                />
                <div class="divider my-0" />
            ))}
        </ul>
      </div>

      {/* Render Game Jam Projects */}
      <div class="mb-5">
        <div class="text-xl font-bold mb-2">Game Jam Projects</div>
        <ul>
          {page.data
            .filter(post => post.data.type === 'gamejam')
            .map(post => (
                <HorizontalCard
                  title={post.data.title}
                  img={post.data.heroImage}
                  desc={post.data.description}
                  url={`/project/${createSlug(post.data.title, post.slug)}`}
                  target="_self"
                  badge={post.data.state}
                  tags={post.data.tags}
                />
                <div class="divider my-0" />
            ))}
        </ul>
      </div>
    </>
    )
  }

  <div class="flex justify-between">
    {
      page.url.prev ? (
        <a href={page.url.prev} class="btn btn-ghost my-10 mx-5">
          {" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
          </svg>{" "}
          Recent posts
        </a>
      ) : (
        <div />
      )
    }
    {
      page.url.next ? (
        <a href={page.url.next} class="btn btn-ghost my-10 mx-5">
          Older Projects{" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            {" "}
            <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
          </svg>
        </a>
      ) : (
        <div />
      )
    }
  </div>
</BaseLayout>
